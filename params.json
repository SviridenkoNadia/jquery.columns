{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Jquery.columns","body":"# jquery.columns\r\n\r\njquery.columns extends the native jQuery css method to parse [viewport relative units](http://www.w3.org/TR/css3-values/#viewport-relative-lengths\r\n) (vh & vw only) and provides a method to quickly create reponsive layouts.\r\n\r\n### How to use it:\r\n\r\nCreate block containers at body level so they cover 100% width, then put as many `div.col` inside as you want.\r\n\r\n```html\r\n<header>\r\n  <div class=\"col\">\r\n    <!-- content -->\r\n  </div>\r\n</header>\r\n\r\n<article class=\"content\">\r\n  <div class='col'> \r\n    <!-- content -->\r\n  </div>\r\n  <div class='col'>\r\n    <!-- content -->\r\n  </div>\r\n  <div class=\"col\">\r\n    <!-- content -->\r\n  </div>\r\n  <div class='col'> \r\n    <!-- content -->\r\n  </div>\r\n  <div class='col'>\r\n    <!-- content -->\r\n  </div>\r\n  <div class=\"col\">\r\n    <!-- content -->\r\n  </div>\r\n</article>\r\n\r\n<footer>\r\n  <div class=\"col\">\r\n    <!-- content -->  \r\n  </div>\r\n</footer>\r\n```\r\n\r\nSet options and call plugin:\r\n```javascript\r\n$.columns.setDefaults({ \r\n  width: 60,\r\n  center: true,\r\n  fontSize: $.columns.calcFontSize([1024, 16], [1440, 22])\r\n              // @media-query________^     ^_____font-size\r\n})\r\n\r\n$('.content').columns({ colsPerRow: 3 })\r\n$('header, footer').columns({ colsPerRow: 1 })\r\n```\r\n\r\nConfigure @media-queries based on the fontSize set in the plugin. Any resolution in between min and max will be auto-adjusted. If you want to change fonts on elements inside columns always use percentages or ems to keep proportions.\r\n\r\n**Note:** Since we're using JS the view might flicker for a second before auto-adjusting.\r\n\r\n```css\r\n@media all and (max-width: 1024px) {\r\n  .col { \r\n    font-size: 16px !important;\r\n  }\r\n}\r\n@media all and (min-width: 1440px) {\r\n  .col { \r\n    font-size: 22px !important; \r\n  }\r\n}\r\n```\r\n\r\n### Options:\r\n```javascript\r\ndefaults = {\r\n  colsPerRow: 3, // columns per row\r\n  width: 75, // percentage of window width\r\n  height: 'auto', // useful for some layouts, you can set it in viewport units (vh)\r\n  center: true, // center layout\r\n  breakPoints: [ [768, 95], [1080, 80] ] // assign width percentages to different resolutions [res, width]\r\n  fontSize: 1.55 // font size in viewport units, calculate with $.columns.calcFontSize\r\n}\r\n```\r\n\r\n### Using the extended css method:\r\n\r\nWith jquery.columns you can pass viewport units to the css method and it will be converted to px and updated on window.resize, so the integration is seamless.\r\n\r\n**Note:** Make sure to pass an object when setting viewport units even if just one property.\r\n\r\n```javascript\r\n// This centers an element in the middle of the screen and\r\n// auto-adjusts when the window is resized to keep proportions\r\n$('element').css({\r\n  width: '50vw',\r\n  height: '50vh',\r\n  marginLeft: '25vw'\r\n  marginTop: '25vh',\r\n  fontSize: '5vw'\r\n})\r\n\r\n$(window).resize() // you may have to trigger window.resize to load the changes\r\n```\r\n\r\n\r\n","google":"","tagline":"jquery.columns"}